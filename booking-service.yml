server:
  port: 8120

spring:
#  application:
#    name: booking-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${BOOKING_DB_URL}
    username: ${BOOKING_DB_USERNAME}
    password: ${BOOKING_DB_PASSWORD}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      auto-offset-reset: latest # 치명적일 수 있는... 이걸 왜 갑자기 상의도 없이??

resilience4j:
  circuitbreaker: # 이것도 상의도 없이 설정을 바꾸셨네...
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 5000
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 2
        waitDurationInOpenState: 10s

management:
  tracing:
    sampling:
      probability: 1.0
    zipkin:
      endpoint: http://zipkin:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: health, info, prometheus

#eureka:
#  client:
#    service-url:
#      defaultZone: ${EUREKA_CLIENT_SERVICE_URL}
